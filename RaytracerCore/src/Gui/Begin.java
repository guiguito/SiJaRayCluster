/*
 * Begin.java
 *
 * Created on 11 décembre 2005, 16:56
 */

package Gui;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;

import javax.swing.JOptionPane;

import Materials.Color;
import Raytracer.Raytracer;
import Raytracer.Scene;

/**
 * GUI initialization. Add and make your scenes here.
 * 
 * @author Guilhem Duche
 */
public class Begin extends javax.swing.JFrame {
	private HashMap<String, Scene> scenes;
	private HashMap<String, Integer> illuminationModels;

	/** Creates new form Begin */
	public Begin() {
		scenes = new HashMap<String, Scene>();
		Scene s1 = AllScenes.getScene1();
		scenes.put(s1.getName(), s1);
		Scene s2 = AllScenes.getScene2();
		scenes.put(s2.getName(), s2);
		Scene s3 = AllScenes.getScene3();
		scenes.put(s3.getName(), s3);
		Scene s4 = AllScenes.getScene4();
		scenes.put(s4.getName(), s4);
		Scene s5 = AllScenes.getScene5();
		scenes.put(s5.getName(), s5);
		Scene s6 = AllScenes.getScene6();
		scenes.put(s6.getName(), s6);
		Scene s7 = AllScenes.getScene7();
		scenes.put(s7.getName(), s7);
		Scene s8 = AllScenes.getScene8();
		scenes.put(s8.getName(), s8);
		Scene s9 = AllScenes.getScene9();
		scenes.put(s9.getName(), s9);
		Scene s10 = AllScenes.getScene10();
		scenes.put(s10.getName(), s10);
		Scene s11 = AllScenes.getScene11();
		scenes.put(s11.getName(), s11);
		Scene s12 = AllScenes.getScene12();
		scenes.put(s12.getName(), s12);
		Scene s13 = AllScenes.getScene13();
		scenes.put(s13.getName(), s13);
		Scene s14 = AllScenes.getScene14();
		scenes.put(s14.getName(), s14);
		Scene s15 = AllScenes.getScene15();
		scenes.put(s15.getName(), s15);
		Scene s16 = AllScenes.getScene16();
		scenes.put(s16.getName(), s16);
		Scene s17 = AllScenes.getScene17();
		scenes.put(s17.getName(), s17);
		Scene s18 = AllScenes.getScene18();
		scenes.put(s18.getName(), s18);
		Scene s19 = AllScenes.getScene19();
		scenes.put(s19.getName(), s19);
		illuminationModels = new HashMap<String, Integer>();
		illuminationModels.put("Phong", new Integer(Raytracer.PHONG));
		illuminationModels
				.put("Phong-Blinn", new Integer(Raytracer.PHONGBLINN));
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
		titles = new javax.swing.JPanel();
		title = new javax.swing.JLabel();
		name = new javax.swing.JLabel();
		xPan = new javax.swing.JPanel();
		xResol = new javax.swing.JLabel();
		width = new javax.swing.JTextField();
		yPan = new javax.swing.JPanel();
		yResol = new javax.swing.JLabel();
		height = new javax.swing.JTextField();
		scenesPan = new javax.swing.JPanel();
		scenesSelector = new javax.swing.JComboBox();
		Set ens = scenes.keySet();
		Iterator it = ens.iterator();
		while (it.hasNext()) {
			scenesSelector.addItem(it.next());
		}
		illuminationSelector = new javax.swing.JComboBox();
		Set ens2 = illuminationModels.keySet();
		Iterator it2 = ens2.iterator();
		while (it2.hasNext()) {
			illuminationSelector.addItem(it2.next());
		}
		valueOpPanel = new javax.swing.JPanel();
		textValue = new javax.swing.JLabel();
		backgroundText = new javax.swing.JLabel();
		colorChooser = new javax.swing.JColorChooser();
		colorChooser.setColor(new java.awt.Color(0, 0, 0));
		fileNamePan = new javax.swing.JPanel();
		texFilePan = new javax.swing.JPanel();
		textFilePan1 = new javax.swing.JPanel();
		fileText = new javax.swing.JLabel();
		textFilePan2 = new javax.swing.JPanel();
		fileText2 = new javax.swing.JLabel();
		textFieldFilePan = new javax.swing.JPanel();
		filename = new javax.swing.JTextField();
		textNbImages = new javax.swing.JPanel();
		beginTime = new javax.swing.JLabel();
		beginField = new javax.swing.JTextField();
		endTime = new javax.swing.JLabel();
		endField = new javax.swing.JTextField();
		nbRecursivity = new javax.swing.JPanel();
		textRecursvity = new javax.swing.JLabel();
		nbRecurs = new javax.swing.JTextField();
		checkPanel = new javax.swing.JPanel();
		activateSuperSampling = new javax.swing.JCheckBox();
		buttonsPan = new javax.swing.JPanel();
		goButton = new javax.swing.JButton();
		exitButton = new javax.swing.JButton();

		getContentPane().setLayout(
				new javax.swing.BoxLayout(getContentPane(),
						javax.swing.BoxLayout.Y_AXIS));

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		titles.setLayout(new java.awt.GridLayout(3, 0));

		titles.setBackground(new java.awt.Color(153, 153, 255));
		title.setFont(new java.awt.Font("Arial", 1, 24));
		title.setForeground(new java.awt.Color(204, 0, 0));
		title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		title.setText("CG II   Raytracer");
		titles.add(title);

		name.setText("By Duch\u00e9 Guilhem");
		titles.add(name);

		getContentPane().add(titles);

		xResol.setText("X resolution");
		xPan.add(xResol);

		width.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		width.setText("300");
		width.setPreferredSize(new java.awt.Dimension(60, 19));
		xPan.add(width);

		getContentPane().add(xPan);

		yResol.setText("Y resolution");
		yPan.add(yResol);

		height.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
		height.setText("300");
		height.setPreferredSize(new java.awt.Dimension(60, 19));
		yPan.add(height);

		getContentPane().add(yPan);

		scenesPan.setLayout(new javax.swing.BoxLayout(scenesPan,
				javax.swing.BoxLayout.Y_AXIS));

		scenesPan.setMinimumSize(new java.awt.Dimension(400, 350));
		scenesPan.setPreferredSize(new java.awt.Dimension(400, 350));
		scenesPan.add(scenesSelector);

		scenesPan.add(illuminationSelector);

		textValue.setFont(new java.awt.Font("Tahoma", 0, 14));
		textValue.setText("LMax value for the operator :");
		valueOpPanel.add(textValue);

		backgroundText.setFont(new java.awt.Font("Tahoma", 1, 14));
		backgroundText.setText("Select background color");
		valueOpPanel.add(backgroundText);

		scenesPan.add(valueOpPanel);

		colorChooser.setToolTipText("Select background color");
		colorChooser.setPreferredSize(new java.awt.Dimension(409, 200));
		scenesPan.add(colorChooser);

		getContentPane().add(scenesPan);

		fileNamePan.setLayout(new javax.swing.BoxLayout(fileNamePan,
				javax.swing.BoxLayout.Y_AXIS));

		texFilePan.setLayout(new javax.swing.BoxLayout(texFilePan,
				javax.swing.BoxLayout.Y_AXIS));

		fileText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		fileText.setText("Name of the files to write without extension(it will be png).");
		textFilePan1.add(fileText);

		texFilePan.add(textFilePan1);

		fileText2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		fileText2.setText("will be saved in defaultx.png");
		textFilePan2.add(fileText2);

		texFilePan.add(textFilePan2);

		fileNamePan.add(texFilePan);

		filename.setPreferredSize(new java.awt.Dimension(110, 19));
		textFieldFilePan.add(filename);

		fileNamePan.add(textFieldFilePan);

		beginTime.setText("Beginning time:");
		textNbImages.add(beginTime);

		beginField.setText("1");
		beginField.setPreferredSize(new java.awt.Dimension(60, 20));
		textNbImages.add(beginField);

		endTime.setText("Ending time");
		textNbImages.add(endTime);

		endField.setText("1");
		endField.setPreferredSize(new java.awt.Dimension(60, 20));
		textNbImages.add(endField);

		fileNamePan.add(textNbImages);

		textRecursvity.setText("Number of recurstivites for the rendering");
		nbRecursivity.add(textRecursvity);

		nbRecurs.setText("6");
		nbRecurs.setPreferredSize(new java.awt.Dimension(20, 20));
		nbRecursivity.add(nbRecurs);

		fileNamePan.add(nbRecursivity);

		getContentPane().add(fileNamePan);

		activateSuperSampling.setText("Activate supersampling 4x");
		checkPanel.add(activateSuperSampling);

		getContentPane().add(checkPanel);

		goButton.setText("Go Render !");
		goButton.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				goButtonMouseClicked(evt);
			}
		});

		buttonsPan.add(goButton);

		exitButton.setText("Exit");
		exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				exitButtonMouseClicked(evt);
			}
		});

		buttonsPan.add(exitButton);

		getContentPane().add(buttonsPan);

		pack();
	}

	// </editor-fold>//GEN-END:initComponents

	/**
	 * Method called when exitButton is clicked.
	 * 
	 * @param evt
	 *            event.
	 */
	private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_exitButtonMouseClicked
		System.exit(0);
	}// GEN-LAST:event_exitButtonMouseClicked

	/**
	 * Method called when goButton is clicked.
	 * 
	 * @param evt
	 *            event.
	 */
	private void goButtonMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_goButtonMouseClicked
		int xSize = 0;
		int ySize = 0;
		boolean error = false;
		int brdf = 0;
		long begin = 0;
		long end = 0;
		int nbRec = 1;
		java.awt.Color col = new java.awt.Color(0, 0, 0);
		// recover values from inputs.
		try {
			xSize = Integer.parseInt(width.getText());
			ySize = Integer.parseInt(height.getText());
			String s = (String) illuminationSelector.getSelectedItem();
			brdf = illuminationModels.get(s);
			begin = Long.parseLong(beginField.getText());
			end = Long.parseLong(endField.getText());
			nbRec = Integer.parseInt(nbRecurs.getText());
			col = colorChooser.getColor();
		} catch (Exception e) {
			error = true;
			System.out.println(e.getMessage());
		}
		Color color = new Color((double) col.getRed() / 255.0,
				(double) col.getGreen() / 255.0, col.getBlue() / 255.0);
		if (begin < 1)
			error = true;
		if (end < begin)
			error = true;

		// start rendering if ok else message error.
		if (!error) {
			String s = (String) scenesSelector.getSelectedItem();
			Scene cs = scenes.get(s);
			RenderingWindow renderWindow = new RenderingWindow(xSize, ySize,
					cs, activateSuperSampling.isSelected(), filename.getText(),
					color, brdf, begin, end, nbRec);
			renderWindow.setVisible(true);
			// this.dispose();
		} else {
			JOptionPane.showMessageDialog(this,
					"Errors in the given parameters or the scene selected",
					"Error(s) !", JOptionPane.WARNING_MESSAGE);
		}
	}// GEN-LAST:event_goButtonMouseClicked

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Begin().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JCheckBox activateSuperSampling;
	private javax.swing.JLabel backgroundText;
	private javax.swing.JTextField beginField;
	private javax.swing.JLabel beginTime;
	private javax.swing.JPanel buttonsPan;
	private javax.swing.JPanel checkPanel;
	private javax.swing.JColorChooser colorChooser;
	private javax.swing.JTextField endField;
	private javax.swing.JLabel endTime;
	private javax.swing.JButton exitButton;
	private javax.swing.JPanel fileNamePan;
	private javax.swing.JLabel fileText;
	private javax.swing.JLabel fileText2;
	private javax.swing.JTextField filename;
	private javax.swing.JButton goButton;
	private javax.swing.JTextField height;
	private javax.swing.JComboBox illuminationSelector;
	private javax.swing.JLabel name;
	private javax.swing.JTextField nbRecurs;
	private javax.swing.JPanel nbRecursivity;
	private javax.swing.JPanel scenesPan;
	private javax.swing.JComboBox scenesSelector;
	private javax.swing.JPanel texFilePan;
	private javax.swing.JPanel textFieldFilePan;
	private javax.swing.JPanel textFilePan1;
	private javax.swing.JPanel textFilePan2;
	private javax.swing.JPanel textNbImages;
	private javax.swing.JLabel textRecursvity;
	private javax.swing.JLabel textValue;
	private javax.swing.JLabel title;
	private javax.swing.JPanel titles;
	private javax.swing.JPanel valueOpPanel;
	private javax.swing.JTextField width;
	private javax.swing.JPanel xPan;
	private javax.swing.JLabel xResol;
	private javax.swing.JPanel yPan;
	private javax.swing.JLabel yResol;
	// End of variables declaration//GEN-END:variables

}
